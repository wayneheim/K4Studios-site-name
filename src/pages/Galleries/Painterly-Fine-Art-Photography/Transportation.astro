---
// IMPORTS — add the getLandingMeta import!
import BaseLayout         from '../../../layouts/BaseLayout.astro';
import LandingHeader      from '../../../components/Landing-Header.jsx';
import ImageBar2          from '../../../components/ImageBar2.jsx';
import TombstoneNav       from '../../../components/TombstoneNav.jsx';
import LandingRightImages from '../../../components/LandingRightImages.jsx';
import FAQAccordion       from '../../../components/FAQAccordion.jsx';
import SiteFooter         from '../../../components/Footer.astro';
import MobileStoryImages  from '../../../components/MobileStoryImages.jsx';
import { getStructuredData } from '../../../components/utils/getStructuredData.ts';

import { siteNav } from '../../../data/siteNav.ts';
import { getSideImages } from '../../../components/utils/getSideImages.ts';
import { autoLinkKeywordsInText } from '../../../components/utils/autoLinkKeywordsInText.ts';
import { semantic as k4Semantic } from '../../../data/semantic/K4-Sem.ts';

import { getLandingMeta } from '../../../data/landingMeta.ts';

import { landingWestern } from '../../../data/Galleries/Painterly-Fine-Art-Photography/Transportation/landingstones.ts';
import { westernStory } from '../../../data/Galleries/Painterly-Fine-Art-Photography/Transportation/story.ts';
import { transportationFAQ } from '../../../data/Galleries/Painterly-Fine-Art-Photography/Transportation/faq.ts';

import '../../../styles/global.css';

// ----------------------
// TRANSPORTATION GALLERY DATA GATHERING
// ----------------------

const sectionPath = "/Galleries/Painterly-Fine-Art-Photography/Transportation";
const headingCount = westernStory.filter((block, i) => i > 0 && block.subhead).length;

// nav helpers...
function findNavEntry(nav, url) {
  for (const entry of nav) {
    if (entry.href === url) return entry;
    if (entry.children) {
      const found = findNavEntry(entry.children, url);
      if (found) return found;
    }
  }
  return null;
}
function recursivelyGatherAllGalleryHrefs(node) {
  let result = [];
  if (!node) return result;
  if (node.href && node.href.startsWith('/Galleries/')) result.push(node.href);
  if (node.children) node.children.forEach(child => result = result.concat(recursivelyGatherAllGalleryHrefs(child)));
  return result;
}
const landingNav = findNavEntry(siteNav, sectionPath);
const galleryPaths = landingNav
  ? recursivelyGatherAllGalleryHrefs(landingNav)
  : [];
const allGalleryData = import.meta.glob('../../../data/Galleries/**/*.mjs', { eager: true });
const galleryDatas = galleryPaths.map(path => {
  const filePath = "../../../data/Galleries" + path.replace(/^\/Galleries/, "") + ".mjs";
  return allGalleryData[filePath]?.galleryData || [];
});

const featheredImages = getSideImages({
  sectionPath,
  headingCount,
  galleryDatas,
});
const featheredImagesSidebar = featheredImages.slice(0, 5);

// Get meta info for OG/twitter
const meta = getLandingMeta(sectionPath);
meta.ogUrl = `https://k4studios.com${sectionPath}`;
meta.twitterUrl = `https://k4studios.com${sectionPath}`;

// Structured data (your usual logic)
const structuredData = getStructuredData({
  type: "gallery",
  data: {
    title: landingWestern.title,
    description: landingWestern.subtitle || landingWestern.description,
    url: `https://k4studios.com${sectionPath}`,
    keywords: landingWestern.keywords || [],
    copyrightNotice: "© Wayne Heim"
  },
  images: featheredImages,
  defaults: {
    copyrightNotice: "© Wayne Heim",
    license: "https://k4studios.com/copyright",
    acquireLicensePage: "https://k4studios.com/prints",
    creditText: "Wayne Heim",
    creatorName: "Wayne Heim",
    creatorUrl: "https://k4studios.com/"
  }
});
---

<!-- SEO JSON-LD (Structured Data) -->
<script type="application/ld+json" is:inline set:html={structuredData}></script>

<!-- BASE LAYOUT — meta prop added! -->
<BaseLayout
  title={`${landingWestern.title} – ${landingWestern.subtitle}`}
  meta={meta}
>

  <main class="bg-[#fdfcf9] text-[#2c2c2c] font-serif min-h-screen overflow-x-hidden">
    <div class="drawer-mode">
      <LandingHeader client:load breadcrumb={landingWestern.breadcrumb} />
    </div>

    <div class="mobile-breadcrumb-wrapper">
      <div class="mobile-breadcrumb">
        {landingWestern.breadcrumb}
      </div>
    </div>

    <div class="w-full max-w-[1200px] mx-auto px-4">
      <div class="carousel-fade reveal-on-scroll">
        <ImageBar2 client:load />
      </div>
    </div>

    <section class="section-heading-wrap">
      <div class="section-heading">
        <h1 class="page-title fade-in reveal-on-scroll">
          {landingWestern.title}
        </h1>
        <h2 class="page-subtitle fade-in reveal-on-scroll">
          {landingWestern.subtitle}
        </h2>
      </div>
    </section>

    <div class="py-5">
      <TombstoneNav items={landingWestern.tombstones} />
    </div>

    <section class="story-layout">
      <div class="text-column">
        <section class="story-section">
          {westernStory.map((section, index) => (
            <article class="story-block" key={index}>
              {section.title && <h2 class="slide-in-left" set:html={autoLinkKeywordsInText(section.title, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />}
              {section.subhead && <h3 class="slide-in-left" set:html={autoLinkKeywordsInText(section.subhead, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />}
              {section.tagline && <h4 class="tagline reveal-on-scroll" set:html={autoLinkKeywordsInText(section.tagline, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />}
              {section.paragraphs?.map((para, i) => (
                <p key={i} class="reveal-on-scroll" set:html={autoLinkKeywordsInText(para, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />
              ))}
              {section.list && section.list.length > 0 && (
                <ul>
                  {section.list.map((item, j) => (
                    <li key={j} class="reveal-on-scroll" set:html={autoLinkKeywordsInText(item, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />
                  ))}
                </ul>
              )}
            </article>
          ))}
        </section>

        <MobileStoryImages client:only="react" images={featheredImages} />
      </div>

      <div class="sidebar-column hidden md:block">
        <div class="sample-fade reveal-on-scroll">
          <LandingRightImages
            heading="Collection Samples"
            images={featheredImagesSidebar}
          />
        </div>
      </div>
    </section>

    <section class="pb-10">
      <input type="checkbox" id="faq-toggle" class="more-toggle" />
      <div class="truncate-container" style="min-height:0;">
        <div class="truncate-text">
          <FAQAccordion items={transportationFAQ} />
        </div>
      </div>
      <label for="faq-toggle" class="more-toggle-label"></label>
    </section>

    <SiteFooter class="pt-8 pb-12" />
  </main>

  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      const els = document.querySelectorAll(".reveal-on-scroll, .slide-in-left");
      if ("IntersectionObserver" in window) {
        const observer = new IntersectionObserver(entries => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add("is-visible");
              observer.unobserve(entry.target);
            }
          });
        }, { threshold: 0.15 });
        els.forEach(el => observer.observe(el));
      }
      const faqToggle = document.getElementById("faq-toggle");
      const truncateContainer = document.querySelector(".truncate-container");
      if (truncateContainer && faqToggle) {
        truncateContainer.addEventListener("click", (e) => {
          const summaryClicked = e.target.closest("summary");
          if (summaryClicked && !faqToggle.checked) {
            faqToggle.checked = true;
          }
        });
      }
    });
  </script>

  <style>
    ul {
      list-style-type: disc;
      padding-left: 1.25em;
    }
    ul li {
      margin-top: 0.15em;
      margin-left: 1.5em;
    }
    ul li::marker {
      margin-top: 0.15em;
      font-size: 1.2em;
      color: gray;
    }
    @media (max-width: 768px) {
      .section-heading .page-title {
        font-size: 1.5rem;
        line-height: 1.3;
      }
      .section-heading .page-subtitle {
        max-width: 42ch;
        margin-left: auto;
        margin-right: auto;
        text-align: center;
        font-size: 1rem;
        line-height: 1.4;
        letter-spacing: -0.04em;
      }
      .section-heading-wrap {
        margin-top: 1rem;
        margin-bottom: 1rem;
      }
      .sidebar-column {
        display: none;
      }
      .story-section {
        letter-spacing: -0.03em;
      }
      .story-block h2 {
        letter-spacing: -0.05em;
        font-size: 1.4rem !important;
        margin-top: -0.59rem;
        line-height: 1.15;
      }
    }
    .fade-in {
      opacity: 0;
      visibility: hidden;
      transform: translateY(1px);
      transition: opacity 1.75s ease, transform 1.75s ease, visibility .5s linear 1.75s;
    }
    .fade-in.is-visible {
      opacity: 1;
      transform: translateY(0);
      visibility: visible;
    }
    .page-title.fade-in {
      transition-delay: .2s;
    }
    .section-heading-wrap {
      margin: 1.5rem 0;
      text-align: center;
    }
    .section-heading .page-title {
      font-size: 2rem;
      margin-bottom: .4rem;
    }
    .section-heading .page-subtitle {
      font-size: 1rem;
      font-weight: 500;
      color: #6d5b4a;
      opacity: .9;
    }
    .story-section {
      line-height: 1.3;
      padding: 2rem 1.5rem;
      max-width: 860px;
      margin: 0 auto;
      font-family: 'Glegoo', serif;
    }
    .story-block {
      margin-bottom: 2.5rem;
    }
    .story-block h2 {
      font-weight: 500;
      font-size: 1.65rem;
      margin-bottom: 0.55rem;
    }
    .story-block h3 {
      font-weight: 500;
      font-size: 1.2rem;
      margin-top: -0.5rem;
      margin-bottom: -.025rem;
      color: #5a4a3b;
    }
    .story-block .tagline {
      font-size: 1.05rem;
      font-weight: 500;
      margin-bottom: 1rem;
      color: #7a6250;
    }
    .story-block p {
      line-height: 1.6;
      margin-bottom: 1rem;
      font-size: 1.01rem;
    }
    .story-block ul {
      padding-left: 1.4rem;
      margin-top: 0.5rem;
    }
    .story-block li {
      margin-bottom: 0.5rem;
      font-size: 1rem;
    }
    .page-subtitle.fade-in {
      opacity: 0 !important;
      transform: translateY(-12px);
      visibility: hidden;
      transition:
        opacity 1.1s ease-out,
        transform 1.1s ease-out,
        visibility 0s linear 1.1s;
      transition-delay: 1s;
    }
    .page-subtitle.fade-in.is-visible {
      opacity: 1 !important;
      transform: translateY(0);
      visibility: visible;
      transition-delay: 1s;
    }
    .carousel-fade {
      opacity: 0;
      transform: translateY(0px);
      transition:
        opacity 1.5s ease-out,
        transform 1.5s ease-out;
      transition-delay: 0.0s;
      visibility: hidden;
    }
    .sample-fade {
      opacity: 0;
      transform: translateY(0px);
      transition:
        opacity 1.5s ease-out,
        transform 1.5s ease-out;
      transition-delay: 0.2s;
      visibility: hidden;
      margin-top: -0.75rem;
    }
    .sample-fade.is-visible {
      opacity: 1;
      transform: translateY(0);
      visibility: visible;
    }
    .carousel-fade.is-visible {
      opacity: 1;
      transform: translateY(0);
      visibility: visible;
    }
  </style>
</BaseLayout>
