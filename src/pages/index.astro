---
import BaseLayout         from '../layouts/BaseLayout.astro';
import LandingHeader      from '../components/Landing-HeaderHome.jsx';
import ImageBar2          from '../components/ImageBar2Home.jsx';
import TombstoneNav       from '../components/TombstoneNav.jsx';
import LandingRightImages from '../components/LandingRightImages.jsx';
import FAQAccordion       from '../components/FAQAccordion.jsx';
import SiteFooter         from '../components/Footer.astro';
import MobileStoryImages  from '../components/MobileStoryImages.jsx';

import { getStructuredData } from '../components/utils/getStructuredData.ts';
import { getLandingMeta }    from '../data/landingMeta.ts';
import { siteNav }           from '../data/siteNav.ts';
import { getSideImagesHome2 as getSideImages } from '../components/utils/getSideImagesHome2.ts';

import { autoLinkKeywordsInText } from '../components/utils/autoLinkKeywordsInText.ts';
import { semantic as k4Semantic } from '../data/semantic/K4-Sem.ts';

import { landingWestern }    from '../data/home/landingstones.ts';
import { painterlyStory }    from '../data/home/story.ts';
import { facingFAQ }         from '../data/home/faq.ts';

import '../styles/global.css';

// ----------------------
// DYNAMIC LOGIC SECTION
// ----------------------

const sectionPath = "/Galleries/Painterly-Fine-Art-Photography"; // Fakes path context for all utils
const meta = getLandingMeta(sectionPath);

const headingCount = painterlyStory.filter((block, i) => i > 0 && block.subhead).length;

// Use the new getSideImagesHome2!
const { featheredImages, galleryDatas, galleryPaths } = getSideImages({
  targetCount: headingCount
});
const featheredImagesSidebar = featheredImages.slice(0, 7);

const structuredData = getStructuredData({
  type: "gallery",
  data: {
    title: landingWestern.title,
    description: landingWestern.subtitle || landingWestern.description,
    url: `https://k4studios.com/`,
    keywords: landingWestern.keywords || [],
    copyrightNotice: "© Wayne Heim"
  },
  images: featheredImages,
  defaults: {
    copyrightNotice: "© Wayne Heim",
    license: "https://k4studios.com/copyright",
    acquireLicensePage: "https://k4studios.com/prints",
    creditText: "Wayne Heim",
    creatorName: "Wayne Heim",
    creatorUrl: "https://k4studios.com/"
  }
});
---


<BaseLayout
  title={`${landingWestern.title} – ${landingWestern.subtitle}`}
  structuredDataJSON={structuredData}
  meta={meta}
>
  <main class="bg-[#fdfcf9] text-[#2c2c2c] font-serif min-h-screen overflow-x-hidden">
    <div class="drawer-mode">
      <LandingHeader client:load breadcrumb={landingWestern.breadcrumb} />
    </div>

    <div class="mobile-breadcrumb-wrapper">
      <div class="mobile-breadcrumb">
        {landingWestern.breadcrumb}
      </div>
    </div>

    <div class="w-full max-w-[1200px] mt-8 mx-auto px-4">
      <div class="carousel-fade reveal-on-scroll">
        <ImageBar2 client:load />
      </div>
    </div>

    <section class="section-heading-anim-wrap">
  <div class="section-heading-anim">
    <h2 class="hero-subtitle-anim" id="hero-subtitle">
      {landingWestern.subtitle}
    </h2>
    <h1 class="hero-title-anim" id="hero-title">
      {landingWestern.title}
    </h1>
  </div>
</section>


    <div class="py-5">
      <TombstoneNav items={landingWestern.tombstones} />
    </div>

    <section class="story-layout">
      <div class="text-column">
        <section class="story-section">
          {painterlyStory.map((section, index) => (
            <article class="story-block" key={index}>
              {section.title && <h2 class="slide-in-left" set:html={autoLinkKeywordsInText(section.title, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />}
              {section.subhead && <h3 class="slide-in-left" set:html={autoLinkKeywordsInText(section.subhead, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />}
              {section.tagline && <h4 class="tagline reveal-on-scroll" set:html={autoLinkKeywordsInText(section.tagline, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />}
              {section.paragraphs?.map((para, i) => (
                <p key={i} class="reveal-on-scroll" set:html={autoLinkKeywordsInText(para, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />
              ))}
              {section.list && section.list.length > 0 && (
                <ul>
                  {section.list.map((item, j) => (
                    <li key={j} class="reveal-on-scroll" set:html={autoLinkKeywordsInText(item, galleryDatas, featheredImages, galleryPaths, k4Semantic)} />
                  ))}
                </ul>
              )}
            </article>
          ))}
        </section>

        <MobileStoryImages client:only="react" images={featheredImages} />
      </div>

      <div class="sidebar-column hidden md:block">
        <div class="sample-fade reveal-on-scroll">
          <LandingRightImages
            heading="Collection Samples"
            images={featheredImagesSidebar}
          />
        </div>
      </div>
    </section>

    <section class="pb-10">
      <input type="checkbox" id="faq-toggle" class="more-toggle" />
      <div class="truncate-container" style="min-height:0;">
        <div class="truncate-text">
          <FAQAccordion items={facingFAQ} />
        </div>
      </div>
      <label for="faq-toggle" class="more-toggle-label"></label>
    </section>

    <SiteFooter class="pt-8 pb-12" />
  </main>

  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      // Reveal-on-scroll logic
      const els = document.querySelectorAll(".reveal-on-scroll, .slide-in-left");
      if ("IntersectionObserver" in window) {
        const observer = new IntersectionObserver(entries => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add("is-visible");
              observer.unobserve(entry.target);
            }
          });
        }, {
          threshold: 0.15
        });
        els.forEach(el => observer.observe(el));
      }

      // NEW: auto-expand FAQ box if a question is clicked
      const faqToggle = document.getElementById("faq-toggle");
      const truncateContainer = document.querySelector(".truncate-container");

      if (truncateContainer && faqToggle) {
        truncateContainer.addEventListener("click", (e) => {
          const summaryClicked = e.target.closest("summary");
          if (summaryClicked && !faqToggle.checked) {
            faqToggle.checked = true;
          }
        });
      }
    });

    document.addEventListener("DOMContentLoaded", () => {
  // Reveal-on-scroll logic (keep your existing code above!)

  // HERO TEXT ANIMATION (this triggers the heading-animated class)
  setTimeout(() => {
    document.querySelector('.section-heading-anim-wrap')
      ?.classList.add('heading-animated');
  }, 880); // Adjust to sync with your bar/tombstone animation
});

  </script>

  <style>
.section-heading-anim-wrap {
  margin: -1.8rem 0 1.3rem 0;
  min-height: 138px;
   margin-bottom: -6px;
  text-align: center;
  position: relative;
  z-index: 2;
  pointer-events: none;
}
.section-heading-anim {
   
  position: relative;
  width: 100%;
  min-height: 105px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Subtitle: large and centered, then shrinks/moves down */
.hero-subtitle-anim {
  font-family: "Glegoo", serif;
  font-weight: 400;
  font-size: 1.2rem;
  letter-spacing: -0.018em;
  line-height: 1.1;
  color: #6d5b4a;
  opacity: 1;
transform: scale(1.7) translateY(53px);
  opacity: 1;
  transition:
    opacity 0.7s cubic-bezier(.33,1,.68,1),
    transform 1.625s cubic-bezier(.38,1,.74,.96),
    filter 0.4s cubic-bezier(.4,1,.7,1);
  transition-delay: 0.21s;
}
.heading-animated .hero-subtitle-anim {
  /* FINAL state */
  transform: scale(1) translateY(130px);
  opacity: 0.96;
  transition-delay: 3.21s;
}


.heading-animated .hero-subtitle-anim {
  font-size: 1.12rem;
  transform: scale(1) translateY(130px);
  opacity: 0.96;
  filter: blur(0);
  transition-delay: 0.13s;
}

/* Title: starts hidden, rises/fades in out of subtitle area */
.hero-title-anim {
  font-family: "Glegoo", serif;
  font-weight: 800;
  font-size: 3.45rem;
  letter-spacing: -0.04em;
  color: #3e3220;
  opacity: 0;
  transform: translateY(85px) scale(0.8);
  transition:
    opacity 0.52s cubic-bezier(.33,1,.68,1),
    transform 0.9s cubic-bezier(.38,1,.74,.96);
  transition-delay: 0.41s;
  margin-top: .5em;
  margin-bottom: 0.02em;
}

.heading-animated .hero-title-anim {
  opacity: 1;
  transform: translateY(0) scale(1);
  transition-delay: 3.49644s;
}

/* Responsive tweaks */
@media (max-width: 800px) {
    /* Title: starts hidden, rises/fades in out of subtitle area */
.hero-title-anim {
  font-family: "Glegoo", serif;
  font-weight: 800;
  font-size: 2.65rem;
  letter-spacing: -0.04em;
  color: #3e3220;
  opacity: 0;
  transform: translateY(45px) scale(0.8);
  transition:
    opacity 0.52s cubic-bezier(.33,1,.68,1),
    transform 0.9s cubic-bezier(.38,1,.74,.96);
  transition-delay: 0.21s;
  margin-top: .95em;
  margin-bottom: 0.02em;
}

.heading-animated .hero-title-anim {
  opacity: 1;
  transform: translateY(0) scale(1);
  transition-delay: 0.24s;
}

  .heading-animated .hero-subtitle-anim {
  font-size: 1.1rem;
  transform: scale(1) translateY(130px);
  opacity: 0.96;
  filter: blur(0);
  transition-delay: 0.13s;
}
.hero-subtitle-anim {
  font-family: "Glegoo", serif;
  font-weight: 400;
  font-size: 1.12rem;
  letter-spacing: -0.028em;
  line-height: 1.1;
  color: #6d5b4a;
  opacity: 1;
transform: scale(1.1) translateY(83px);
  opacity: 1;
  transition:
    opacity 0.7s cubic-bezier(.33,1,.68,1),
    transform 1.625s cubic-bezier(.38,1,.74,.96),
    filter 0.4s cubic-bezier(.4,1,.7,1);
  transition-delay: 0.21s;
}
}



  ul {
    list-style-type: disc;
    padding-left: 1.25em;
  }
  ul li {
    margin-top: 0.15em;
    margin-left: 1.5em;
  }
  ul li::marker {
    margin-top: 0.15em;
    font-size: 1.2em;
    color: gray;
  }
  @media (max-width: 768px) {
    .section-heading .page-title {
      font-size: 1.5rem;
      line-height: 1.3;
    }
    .section-heading .page-subtitle {
      max-width: 42ch;
      margin-left: auto;
      margin-right: auto;
      text-align: center;
      font-size: 1rem;
      line-height: 1.4;
      letter-spacing: -0.04em;
    }
    .section-heading-wrap {
      margin-top: 1rem;
      margin-bottom: 1rem;
    }
    .sidebar-column {
      display: none;
    }
    .story-section {
      letter-spacing: -0.03em;
    }
    .story-block h2 {
      letter-spacing: -0.05em;
      font-size: 1.4rem !important;
      margin-top: -0.59rem;
      line-height: 1.15;
    }
  }
  .fade-in {
    opacity: 0;
    visibility: hidden;
    transform: translateY(1px);
    transition: opacity 1.75s ease, transform 1.75s ease, visibility .5s linear 1.75s;
  }
  .fade-in.is-visible {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
  }
  .page-title.fade-in {
    transition-delay: .2s;
  }
  .section-heading-wrap {
    margin: 1.5rem 0;
    text-align: center;
  }
  .section-heading .page-title {
    font-size: 2rem;
    margin-bottom: .4rem;
  }
  .section-heading .page-subtitle {
    font-size: 1rem;
    font-weight: 400;
    color: #6d5b4a;
    opacity: .9;
  }
  .story-section {
    line-height: 1.3;
    padding: 2rem 1.5rem;
    max-width: 860px;
    margin: 0 auto;
    font-family: 'Glegoo', serif;
  }
  .story-block {
    margin-bottom: 2.5rem;
  }
  .story-block h2 {
    font-size: 1.65rem;
    margin-bottom: 0.55rem;
  }
  .story-block h3 {
    font-weight: normal;
    font-size: 1.2rem;
    margin-top: -0.5rem;
    margin-bottom: -.025rem;
    color: #5a4a3b;
  }
  .story-block .tagline {
    font-size: 1.05rem;
    font-weight: 500;
    margin-bottom: 1rem;
    color: #7a6250;
  }
  .story-block p {
    line-height: 1.6;
    margin-bottom: 1rem;
    font-size: 1.01rem;
  }
  .story-block ul {
    padding-left: 1.4rem;
    margin-top: 0.5rem;
  }
  .story-block li {
    margin-bottom: 0.5rem;
    font-size: 1rem;
  }
  .page-subtitle.fade-in {
    opacity: 0 !important;
    transform: translateY(-12px);
    visibility: hidden;
    transition:
      opacity 1.1s ease-out,
      transform 1.1s ease-out,
      visibility 0s linear 1.1s;
    transition-delay: 1s;
  }
  .page-subtitle.fade-in.is-visible {
    opacity: 1 !important;
    transform: translateY(0);
    visibility: visible;
    transition-delay: 1s;
  }
  .carousel-fade {
    opacity: 0;
    transform: translateY(0px);
    transition:
      opacity 1.5s ease-out,
      transform 1.5s ease-out;
    transition-delay: 0.0s;
    visibility: hidden;
  }
  .sample-fade {
    opacity: 0;
    transform: translateY(0px);
    transition:
      opacity 1.5s ease-out,
      transform 1.5s ease-out;
    transition-delay: 0.2s;
    visibility: hidden;
    margin-top: -0.75rem;
  }
  .sample-fade.is-visible {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
  }
  .carousel-fade.is-visible {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
  }
  </style>
</BaseLayout>
