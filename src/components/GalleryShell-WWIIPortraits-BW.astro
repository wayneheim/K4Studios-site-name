---
import BaseLayout from "@/layouts/BaseLayout.astro";
import GalleryHeader from "@/components/Gallery-LandingHeader.jsx";
import GalleryInfo from "@/components/GalleryInfo.jsx";
import ChapterViewer from "@/components/Chapter-WWIIPortraitsBW.jsx";
import Footer from "@/components/Footer.astro";
import GalleryPreviewStrip from "@/components/GalleryPreviewStrip.astro";

import { galleryData as allImages } from "@/data/Galleries/Painterly-Fine-Art-Photography/Facing-History/WWII/Portraits/Black-White.mjs";
import { landingWestern } from "@/data/Galleries/Painterly-Fine-Art-Photography/Facing-History/WWII/War/landingstones.ts";
import { getStructuredData } from "@/components/utils/getStructuredData.ts";

const { breadcrumb, entranceData, initialImageId } = Astro.props;

const isGhost = !initialImageId || initialImageId === "i-k4studios";
const currentImage = isGhost
  ? null
  : allImages.find(img => img.id === initialImageId && img.visibility !== "ghost");

const previewImages = allImages
  .filter(img => img.visibility !== "ghost")
  .slice(0, 8);

const previewPath = "/Galleries/Painterly-Fine-Art-Photography/Facing-History/WWII/Portraits/Black-White";

// pick one random preview image to replace the featured
const singlePreviewImage =
  previewImages && previewImages.length
    ? previewImages[Math.floor(Math.random() * previewImages.length)]
    : null;

// create entrance data overriding featured image if available
const usedEntranceData = {
  ...entranceData,
  image: singlePreviewImage
    ? {
        src: singlePreviewImage.src,
        alt: singlePreviewImage.alt || singlePreviewImage.title || entranceData?.image?.alt,
        caption: singlePreviewImage.title || entranceData?.image?.caption,
      }
    : entranceData?.image,
};

const imageStructuredData = currentImage
  ? getStructuredData({ type: "image", data: currentImage })
  : getStructuredData({
      type: "gallery",
      data: {
        title: landingWestern.title,
        description: landingWestern.subtitle,
        url: previewPath
      },
      images: previewImages
    });

// dynamic title logic
function formatBreadcrumbTitle(bc) {
  if (!bc) return "Gallery";
  return bc.split("|").map(s => s.trim()).join(" – ");
}
const galleryTitle = formatBreadcrumbTitle(usedEntranceData?.breadcrumb || breadcrumb);
const pageTitle = currentImage
  ? (currentImage.title
      ? `${currentImage.title} — ${galleryTitle}`
      : `Chapter ${allImages.findIndex(img => img.id === currentImage.id) + 1} — ${galleryTitle}`
    )
  : galleryTitle;
---

<BaseLayout 
  title={pageTitle} 
  structuredDataJSON={imageStructuredData}
>

  <div id="gallery-content" class="flex-grow relative overflow-hidden">

    <!-- Header stays fixed above intro -->
    <div id="header-section" class="section-visible" style="z-index: 10; position: relative;">
      <GalleryHeader client:load breadcrumb={breadcrumb} />
    </div>

    <!-- Spacer to push intro below header visually -->
    <div class="h-0 md:h-5"></div>

    <!-- Intro: Visible initially with overridden featured image -->
    <div id="intro-section" class="section-visible" style="z-index: 1; position: relative;">
      <GalleryInfo client:load entranceData={usedEntranceData} />
    </div>

    <!-- Chapter Viewer: Hidden initially -->
    <div id="chapter-section" class="section-hidden" style="display: none;">
      <ChapterViewer client:load initialImageId={initialImageId || "i-k4studios"} />
    </div>
  </div>

  <!-- Spacer pushes the footer down -->
  <div class="h-12 md:h-20"></div>

  <Footer 
    previewImages={previewImages}
    previewPath={previewPath}
  />

  <style>
    .hamburger-circle {
      display: none !important;
    }

    @media (max-width: 767px) {
      #nav-toggle {
        display: none !important;
      }
    }

    .section-hidden {
      display: none !important;
      opacity: 0;
      transform: translateX(100%);
      transition: opacity 2s ease, transform 1.2s ease;
      pointer-events: none;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 0;
      z-index: 0;
    }

    .section-visible {
      opacity: 1;
      transform: translateX(0%);
      transition: opacity 1s ease, transform 1.2s ease;
      pointer-events: auto;
      position: relative;
      width: 100%;
      z-index: 2;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const exploreButton = document.querySelector('.explore-button');
      const header = document.getElementById('header-section');
      const intro = document.getElementById('intro-section');
      const chapter = document.getElementById('chapter-section');
      const navToggle = document.getElementById('nav-toggle');
      const floatingHeader = document.getElementById('floating-header');
      const menuLabel = document.getElementById('menu-label');
      const topSpacer = document.getElementById('top-spacer');
      let isMenuOpen = false;

      const deepLinkMatch = window.location.pathname.match(/\/(i-[a-zA-Z0-9_-]+)$/);
      if (deepLinkMatch && deepLinkMatch[1] !== "i-k4studios") {
        setTimeout(() => {
          exploreButton?.click();
        }, 50);
      }

      exploreButton?.addEventListener('click', () => {
        header?.classList.add('section-hidden');
        intro?.classList.add('section-hidden');
        chapter.style.display = 'block';
        setTimeout(() => {
          chapter.classList.remove('section-hidden');
          chapter.classList.add('section-visible');
        }, 50);

        if (window.innerWidth >= 768) {
          navToggle?.classList.remove('hidden');
        }

        if (topSpacer) {
          topSpacer.style.marginTop = "0px";
          topSpacer.style.height = "0px";
          topSpacer.style.overflow = "hidden";
        }
      });

      navToggle?.addEventListener('click', () => {
        isMenuOpen = !isMenuOpen;
        menuLabel.textContent = isMenuOpen ? "M−" : "M+";
        floatingHeader?.classList.toggle('show');
      });
    });

    document.addEventListener('contextmenu', function (e) {
      if (e.target.tagName === 'IMG') {
        e.preventDefault();
      }
    });
  </script>
</BaseLayout>
