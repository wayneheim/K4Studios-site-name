---
interface Props {
  images: {
    id: string;
    title?: string;
    alt?: string;
    src: string;
    visibility?: string;
  }[];
  path: string;
  limit?: number;
}

const { images, path, limit = 6 } = Astro.props;

const visibleImages = images
  .filter(img => img.visibility !== "ghost")
  .slice(0, limit);

// Calculate mid-point index (e.g. 3 for 6 images)
const middleIndex = Math.floor(visibleImages.length / 2);
---

<section class="preview-strip-wrapper" aria-label="Gallery preview strip">
  <p class="preview-label">Gallery Preview</p>

  <div class="preview-strip">
    {visibleImages.map((img, index) => {
      const offset = index - middleIndex;
      const delay = Math.abs(offset) * 100 + 200; // center first
      const direction = offset === 0 ? "center" : offset < 0 ? "left" : "right";
      return (
        <a
          href={`${path}/${img.id}`}
          class={`preview-thumb anim-${direction}`}
          title={img.title ?? img.alt ?? "Gallery image"}
          style={`animation-delay: ${delay}ms`}
        >
          <img
            src={img.src}
            alt={img.alt ?? img.title ?? "Gallery image"}
            loading="lazy"
          />
        </a>
      );
    })}
  </div>
</section>

<style>
  .preview-strip-wrapper {
    margin-top: 2.5rem;
    padding: 1rem 0;
  }

  .preview-label {
    text-align: center;
    font-size: 0.85rem;
    font-weight: 500;
    margin-bottom: 0.75rem;
    color: #444;
    font-family: 'Glegoo', serif;
    opacity: 0.85;
  }

  .preview-strip {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    gap: 1rem;
    justify-content: center;
    padding: 0 1rem;
  }

  .preview-thumb {
    flex: 0 0 auto;
    width: 110px;
    height: 110px;
    border-radius: 6px;
    overflow: hidden;
    display: block;
    border: 2px solid #ccc;
    opacity: 0;
    transform: scale(0.95);
    animation: fadeInCenter 0.6s ease forwards;
  }

  .preview-thumb img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  @keyframes fadeInCenter {
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .anim-left {
    animation-name: fadeSlideLeft;
  }

  .anim-right {
    animation-name: fadeSlideRight;
  }

  .anim-center {
    animation-name: fadeInCenter;
  }

  @keyframes fadeSlideLeft {
    0% {
      opacity: 0;
      transform: translateX(30px) scale(0.9);
    }
    100% {
      opacity: 1;
      transform: translateX(0) scale(1);
    }
  }

  @keyframes fadeSlideRight {
    0% {
      opacity: 0;
      transform: translateX(-30px) scale(0.9);
    }
    100% {
      opacity: 1;
      transform: translateX(0) scale(1);
    }
  }
</style>
